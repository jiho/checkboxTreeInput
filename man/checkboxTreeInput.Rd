% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkboxTreeInput.R
\name{checkboxTreeInput}
\alias{checkboxTreeInput}
\title{Convert a tree data.frame into a ul list}
\usage{
checkboxTreeInput(inputId, label = NULL, tree, selected = NULL,
  opened = NULL)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the value.}

\item{label}{Display label for the control, or \code{NULL} for no label.}

\item{tree}{data.frame defining a tree, with columns \code{id} and \code{parent_id} at least.}

\item{selected}{The nodes that should be initially selected, if any. All selected nodes (and their ancestors) will also be opened, to be visible.}

\item{opened}{The nodes that should be initially opened, if any. All ancestor nodes will also be opened.}
}
\value{
A list of HTML elements that can be added to a UI definition.
}
\description{
Convert a tree data.frame into a ul list
}
\examples{
tree <- data.frame(id=1:3, parent_id=c(NA, 1, 2))
checkboxTreeInput("foo", "bar", tree=tree)
checkboxTreeInput("foo", "bar", tree=tree, selected=3)
if (interactive()) {
tree <- data.frame(id=1:6, parent_id=c(NA, 1, 2, 2, NA, 1))
ui <- fluidPage(
  checkboxTreeInput(inputId="tree", label="Tree selector",
    tree=tree, selected=c(1, 6), opened=1
  ),
  verbatimTextOutput("selected")
)
server <- function(input, output, session) {
  output$selected <- renderPrint( input$tree )
}
shinyApp(ui, server)
}
}
